C#

Array - 배열
1. int[] nums = new int[10];

	- int[] : 정수 배열을 의미
	- nums : 정수 배열을 담을 변수를 의미
	- new int[10] : 정수 배열 클래스를 인스턴스로 사용하기 위해 사용하고, 10개의 배열 자리를 지정

	> 10개의 정수를 담을 nums 라는 배열을 인스턴스 함.

2. nums[i] = 25;
	- 정수 배열 nums의 i 번째 index에 25라는 값을 지정함

3. 동적 배열
ArrayList와 List<T>
	- 배열 확장이 필요한 경우 내부적으로 배열 크기가 2배인 새로운 배열을 생성하고, 모든 기존 배열 요소들을 새로운 배열에 복사한 후 기존 배열을 해제한다.
	- 동적배열의 시간복잡도는 1) 인덱스를 통할 경우 O(1), 2) 값으로 검색하는 경우 O(n)을 갖는다.

ArrayList Class
	- 모든 배열 요소가 object 타입인 Non-generic 동적 배열 클래스
	- 단점으로 박싱 / 언박싱이 일어난다.
	- 형식 캐스팅이 필요하다
		> int val = (int)myList[1];

List<T> 클래스
	- 배열요소가 T 타입인 Generics
	- 내부적으로 배열을 가지고 있다.
	- 동일한 타입의 데이터를 가지고 있다.
	- 미리 할당된 배열 크기가 부족하면 내부적으로 배열을 2배로 늘려 동적으로 배열을 확장한다.
	- 형식 캐스팅이 필요하지 않다.
		> int val = myList[1];
	- 박싱/언박싱의 문제를 발생시키지 않는다.

SortedList<TKey, TValue> 클래스		T  = Type 을 의미함.
	- Key값으로 value를 찾는 Map ADT 타입을 내부적으로 배열을 이용해 구현한 클래스
	- MAP ADT를 구현한 클래스로는 
		> Hashtable/Dictionary 클래스 : 해시테이블을 이용
		> SortedDictionary : 이전검색트리를 이용
		> SortedList : 배열을 이용
	- 내부적으로 키값으로 소트된 배열을 갖고 있으며, 이진검색이 가능하기 때문에
	- O(log n)의 검색시간이 소요된다.
	- 미리 할당된 배열크기가 부족하면 내부적으로 배열을 2배로 늘려 동적으로 배열을 확장함.

ConcurrentBag<T> 클래스
	- 리스트와 비슷하게 객체들의 컬렉션을 추가
	- List<T>와 다르게 입력 순서를 보장하지 않는다.
	- 데이터를 추가하기 위해 Add() 메서드를 사용
	- 데이터를 읽기 위해 foreach문 혹은 TryPeek(), TryTake() 메서드를 사용
		> TryPeek()은 ConcurrentBag에서 데이터를 읽기만 함
		> TryTake()는 데이터를 읽은 후 해당 요소를 ConcurrentBag에서 삭제함

	- 멀티스레드가 동시에 엑세스 할 수 있다.
	- 